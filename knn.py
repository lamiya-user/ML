# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t1euaTXOUGR9fO1fFLVZBqUsJnrT4j28
"""

!pip install numpy
!pip install pandas
!pip install scikit-learn
!pip install matplotlib
!pip install seaborn

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
# %matplotlib inline

"""about the data set"""

url ="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ML0101EN-SkillsNetwork/labs/Module%203/data/teleCust1000t.csv"
df = pd.read_csv(url)
df

"""data visualisation"""

df['custcat'].value_counts()

correlation_matrix = df.corr()
plt.figure(figsize =(10,8))
sns.heatmap(correlation_matrix,annot=True, cmap='coolwarm',fmt='.2f',linewidths=0.5)

correlation_values = abs(df.corr()['custcat'].drop('custcat')).sort_values(ascending=False)
correlation_values

x = df.drop('custcat',axis=1)
y =df['custcat']

"""normalising the data"""

x_norm = StandardScaler().fit_transform(x)

"""train, test and split the data accordingly"""

x_train, x_test, y_train, y_test = train_test_split(x_norm, y, test_size=0.2, random_state=4)

"""execute the training"""

k=3
knn_classifier = KNeighborsClassifier(n_neighbors=k)
knn_model =knn_classifier.fit(x_train,y_train)

"""prediction"""

yhat = knn_model.predict(x_test)

"""evaluation"""

print("accuracy:",accuracy_score(y_test ,yhat))

k=6
knn_classifier6 = KNeighborsClassifier(n_neighbors=k)
knn_model3 = knn_classifier6.fit(x_train, y_train)

yhat6 = knn_model3.predict(x_test)

print("accuracy",accuracy_score(yhat6,y_test))

